---
title: "GenerateBrutalDesignMatrix"
output: html_document
---


```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```
## Description

On réalise la matrice de design. Les choix faits sont les suivants pour le moment:

On ne considère que les magasins ayant ouvert avant 2016: au moins 1 an d'expérience.

Pour l'instant, on ne considère par magasin que les produits qui ont au moins été vendus dans les 6 derniers mois pendant une durée supérieure ou égale à 3 mois.

On essaie de prédire le chiffre d'affaire par mois de l'entreprise par produit. On divise donc le chiffre d'affaire global par la durée d'achat


## R Markdown

```{r}
setwd("/Users/oliverousseau/Documents/BigData for Business/Cours/Oreal Data Camp")
library(ggplot2)
```

On soigne un peu les données en rassemblant les trucs similaires.
On ne s'intéressera qu'à la sous-hiérarchie référence et pas plus bas

```{r}
data <- read.csv("~/Documents/BigData for Business/Cours/Oreal Data Camp/datas/Moreau/final_cleaned_data.csv", row.names=1)

data$Signature <- as.factor(data$Signature)
data$EAN <- as.factor(data$EAN)
data$Montant <- as.numeric(as.character(data$Montant))
data$Quantité <- as.numeric(as.character(data$Quantité))

removing  = c("FreqVisite", "DUNS", "Axe", "N")
data <- data[, !colnames(data) %in% removing ]

data[data$Fonction %in% c("Regular shampoo", "SHAMPOOING"), "Fonction"] = "Shampoo"
data[data$Fonction %in% c("LAQUES", "Lacquer", "Wax", "Wax / Clay", "GELS COIFFANTS", "Clay", "COIFFANTS - CIRE"), "Fonction"] = "Wax / Clay"
data[data$Fonction %in% c("Treatment", "Other rinse off treatment", "Other non rinse off treatment", "SOIN SANS RINCAGE", "SOIN A RINCER", "Anti-hair loss treatment", "Mask (hair)", "Liquid lotion", "Non rinse off serum"), "Fonction"] = "Treatment"

data[data$Fonction %in% c("Styling gel spray", "Styling gel jar", "COIFFANTS - PATE", "COIFFANTS-PATE","COIFFANTS-MOUSSES", "Other styling gel", "Styling gel tube"), "Fonction"] = "Styling gel"
data[data$Fonction %in% c("Hairstyling foam", "Styling gel jar", "COIFFANTS - PATE", "Other styling"), "Fonction"] = "Styling foam"

data[data$Fonction %in% c("COLORATION DIRECTE", "Other hair color", "Temporary hair color", "Bonders"), "Fonction"] = "Other hair color"

data[data$Fonction %in% c("Hair spray", "COIFFANTS - SPRAY", "Non rinse off spray", "Sprays"), "Fonction"] = "Sprays"

data[data$Fonction %in% c("Non rinse off cream", "COIFFANTS - CREME"), "Fonction"] = "Non rinse off cream"
data[data$Fonction %in% c("RENFORCATEURS", "Conditioner"), "Fonction"] = "Conditioner"

data[data$SousAxe == "Hair color", "SousAxe"] = "HAIRCOLOR"
data[data$SousAxe == "Styling", "SousAxe"] = "STYLING"
data[data$SousAxe == "SOINS", "SousAxe"] = "Hair Care"

data_vente <- data[,c(1,7,29,32,37:39)]
data_entreprise <- data[!duplicated(data[,c(1)]),c(1:25)]
data_produit <- data[!duplicated(data[, c(29)]),c(26:36)]
```

## Analyse produits/paniers

#### Matrice de design
```{r}
# Matrice avant 2016 ou on enlève les remises et les reprises
data_mature <- data_vente[data_vente$Ouverture < 2016 & data_vente$MoisAnnee < 201800 & data_vente$Classe == "REVENTE" & data_vente$Montant >= 0 & data_vente$Quantité > 0,]
dim(data_mature)
data_mature$Référence <- droplevels(data_mature$Référence)

data_mature_copy <- data_mature
data_mature_copy$nb_achat <- 1

library(plyr)
data_mature_copy <- ddply(data_mature_copy, .(Référence, SIRET),  summarize, nb_achat = sum(nb_achat), Quantité = sum(Quantité), Montant = sum(Montant), date_debut = min(MoisAnnee), date_fin = max(MoisAnnee))

data_mature_copy[,'Durée'] <- (data_mature_copy[,"date_fin"]%/%100-data_mature_copy[,"date_debut"]%/%100) * 12 + (data_mature_copy[,"date_fin"]%% 100-data_mature_copy[,"date_debut"]%% 100)

data_mature_copy <- data_mature_copy[data_mature_copy$Durée != 0,]
data_mature_copy <- data_mature_copy[data_mature_copy$nb_achat > 2,]
data_mature_copy <- data_mature_copy[data_mature_copy$date_fin > 201605,]


data_mature_copy$freq <-  data_mature_copy$Durée/(data_mature_copy$nb_achat-1)

data_mature_copy$CA_mois <-  (data_mature_copy$nb_achat-1)/data_mature_copy$nb_achat * data_mature_copy$Montant / data_mature_copy$Durée

data_mature_copy$Quantite_mois <-  (data_mature_copy$nb_achat-1)/data_mature_copy$nb_achat * data_mature_copy$Quantité / data_mature_copy$Durée

data_mature_copy<- data_mature_copy[1:dim(data_mature_copy)[1]-1,]
```

## Matrice de design par magasin panier de vente
```{r}
data_mature_copy1 <- data_mature_copy
data_all_dummy <- with(data_mature_copy1,
                    data.frame(model.matrix(~Référence-1,data_mature_copy1)))
data_mature$Référence <- NULL

data_all_dummy$PanierProduits <- rowSums(data_all_dummy)

data_mature_copy1 <- cbind(data_mature_copy1, data_all_dummy)

data_mature_copy1 <- data_mature_copy1[,c(2,10,12:dim(data_mature_copy1)[2])]

data_mature_copy1 <- aggregate(. ~ SIRET, data_mature_copy1, FUN = sum)

# On enlève la corse
#data_mature_copy1 <- data_mature_copy1[-c(which(data_mature_copy1$SIRET == 43969784800034)),]
#data_mature_copy1 <- data_mature_copy1[-c(1,2,3),]



library(ggplot2)
ggplot(data = data_mature_copy1) + geom_point(aes(x=PanierProduits, y=CA_mois))
```

On merge
```{r}
design_matrix <- merge(data_mature_copy1, data_entreprise, by = 'SIRET')
Y <- as.matrix(design_matrix$CA_mois)
X <- as.matrix(design_matrix[,-c(2)])
summary(X)
library(glmnet)
```
