title: "J1-Import donnée"
output: html_document

knitr::opts_chunk$set(echo = TRUE)
R Markdown

setwd("/Users/oliverousseau/Documents/BigData for Business/Cours/Oreal Data Camp")
data <- read.table("~/Documents/BigData for Business/Cours/Oreal Data Camp/datas/POC_RK_2014_2017.CSV", sep=";", quote="\"", encoding = 'latin1', header = T)

data$Signature <- as.factor(data$Signature)
data$EAN <- as.factor(data$EAN)
data$Montant <- as.numeric(data$Montant)
data$Quantité <- as.numeric(data$Quantité)

removing  = c("FreqVisite", "DUNS", "Axe", "N")
data <- data[, !colnames(data) %in% removing ]

data[data$Fonction %in% c("Regular shampoo", "SHAMPOOING"), "Fonction"] = "Shampoo"
data[data$Fonction %in% c("LAQUES", "Lacquer", "Wax", "Wax / Clay", "GELS COIFFANTS", "Clay", "COIFFANTS - CIRE"), "Fonction"] = "Wax / Clay"
data[data$Fonction %in% c("Treatment", "Other rinse off treatment", "Other non rinse off treatment", "SOIN SANS RINCAGE", "SOIN A RINCER", "Anti-hair loss treatment", "Mask (hair)", "Liquid lotion", "Non rinse off serum"), "Fonction"] = "Treatment"

data[data$Fonction %in% c("Styling gel spray", "Styling gel jar", "COIFFANTS - PATE", "COIFFANTS-PATE","COIFFANTS-MOUSSES", "Other styling gel", "Styling gel tube"), "Fonction"] = "Styling gel"
data[data$Fonction %in% c("Hairstyling foam", "Styling gel jar", "COIFFANTS - PATE"), "Fonction"] = "Styling foam"

data[data$Fonction %in% c("COLORATION DIRECTE", "Other hair color", "Temporary hair color", "Bonders"), "Fonction"] = "Other hair color"

data[data$Fonction %in% c("Hair spray", "COIFFANTS - SPRAY", "Non rinse off spray", "Sprays"), "Fonction"] = "Sprays"

data[data$Fonction %in% c("Non rinse off cream", "COIFFANTS - CREME"), "Fonction"] = "Non rinse off cream"
data[data$Fonction %in% c("RENFORCATEURS", "Conditioner"), "Fonction"] = "Conditioner"

data[data$Fonction %in% c("Other styling", "Conditioner"), "Fonction"] = "DIVERS PAYANT"

data[data$SousAxe == "Hair color", "SousAxe"] = "HAIRCOLOR"
data[data$SousAxe == "Styling", "SousAxe"] = "STYLING"
data[data$SousAxe == "SOINS", "SousAxe"] = "Hair Care"
Analyse produits/paniers

Dataframe produits unique (MOYEN UTILE)

data_clean <- data[data$Classe == "REVENTE" & data$Montant >= 0, c(1:10, 26, 27)]

library(plyr)
produits_unique <- ddply(data_clean, .(Référence), summarize, Signature = head(Signature, 1), Marque = head(Marque, 1), SousMarque = head(SousMarque, 1), SousAxe = head(SousAxe, 1), Classe = head(Classe, 1), Fonction = head(Fonction, 1), Produit = head(Produit, 1), EAN = head(EAN, 1), Quantité = sum(Quantité), Montant = sum(Montant))

produits_unique_clean <- produits_unique
produits_unique_clean$Classe <- NULL
produits_unique_clean$Signature <- NULL
produits_unique_clean$Ean <- NULL
valid_reference <- as.vector(produits_unique_clean$Référence)
Matrice de design

# Matrice avant 2016 ou on enlève les remises et les reprises
data_mature <- data[data$Ouverture < 2015 & data$MoisAnnee < 201600 & data$Classe == "REVENTE" & data$Montant >= 0,]
dim(data_mature)
data_mature$Référence <- droplevels(data_mature$Référence)

data_all_dummy <- with(data_mature,
                    data.frame(model.matrix(~Référence-1,data_mature)))

data_mature = cbind(data_mature, data_all_dummy)

## On remplace par les quantités dans la matrice d'occurence
## A COMMENTER SI ON VEUT JUSTE 1 PAR ACHAT
for(j in 1:dim(data_mature)[1]){
  reference = data_mature[j,'Référence']
  reference = gsub(' ','.',reference)
  reference = gsub('/','.',reference)
  column_name <- paste('Référence', reference, sep='')
  data_mature[j, column_name] <- data_mature[j, 27]
}


summary(data_mature)
for(i in 29:dim(data_mature)[2]){
  data_mature[is.na(data_mature[,i]),i] = 0
}
summary(data_mature)


data_mature$Référence = NULL

# On aggrège tous les résultats en sommant les quantités
data_aggregate_brutal <- data_mature[,c(14, 28:dim(data_mature)[2])]
for(i in c(1:dim(data_aggregate_brutal)[2])){
  data_aggregate_brutal[,i]<-as.numeric(data_aggregate_brutal[,i])
}
data_aggregate_sum <- aggregate(data_aggregate_brutal, by=list(data_aggregate_brutal$SIRET), FUN = sum)

produits <- data_aggregate_sum
produits$Group.1 = NULL
produits$SIRET = NULL
produits = t(produits)

# On ajoute la variable nombre de produits achetés

A FAIRE

produit_achete <- function(x){
  return(min(1,x))
}

On peut faire du clustering par produit
On peut faire des matrices de corrélations par monogram, par bigram etc ... pour créer des paniers de produits. Discuter au tél avec le data scientist d'ACCENTURE
